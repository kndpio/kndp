argo-cd:
  dex:
    enabled: false
  applicationSet:
    enabled: false
  notifications:
    enabled: false
  configs:
    cm:
       ui.cssurl: "./css/generated.css"
       exec.enabled: true

  server:
    replicas: 0
    restartPolicy: Never
    extraContainers:
      - name: package
        image: ghcr.io/kndpio/kndp/kndp
        env:
          - name: "PATHS"
            value: "/shared/app/css"
        imagePullPolicy: IfNotPresent
        volumeMounts:
         - name: extensions
           mountPath: /shared/app/css
         - name: extensions
           mountPath: /tmp/extensions
        command: ["/bin/sh", "-c"]
        args: 
          - cp -r /packages/* /tmp/extensions/ && node /tmp/extensions/backend/backend.js
    volumes: 
      - name: extensions
        emptyDir: {}
    volumeMounts:
      - name: extensions
        mountPath: /tmp/extensions
      - name: extensions

        mountPath: /shared/app/css
    extraArgs:
      - --insecure
      - --rootpath
      - /argo-cd
    ingress:
      enabled: true
      hosts:
        - kndp.local
      paths:
        - /argo-cd
      annotations: 
         kubernetes.io/ingress.class: nginx
 
ingress-nginx:
  controller:
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
    hostPort:
      enabled: true
    terminationGracePeriodSeconds: 0
    service:
      type: NodePort
    watchIngressWithoutClass: true
    nodeSelector:
      ingress-ready: "true"
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Equal"
        effect: "NoSchedule"
    publishService:
      enabled: false
    extraArgs:
      publish-status-address: localhost
      enable-ssl-passthrough: true

vault:
  server:
    enabled: true
    standalone:
      enabled: true
      config: |
        ui = true

        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"

          custom_response_headers {
            "default" = {
              "Content-Security-Policy" = ["frame-ancestors 'self' http://kndp.local/argo-cd"]
            }
          }
        }
        storage "file" {
          path = "/vault/data"
        }

     

    ingress:
      enabled: true
      hosts:
      - host: kndp.local
        paths:
        - /ui
        - /v1
      pathType: ImplementationSpecific
      annotations: 
         kubernetes.io/ingress.class: nginx
  

grafana:
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

  dashboardsConfigMaps:
    default: '{{ .Release.Name }}-dashboards-grafana'
  adminUser: admin
  adminPassword: admin


  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Loki
        type: loki
        access: proxy
        basicAuth: true
        basicAuthUser: admin
        url: http://kndp-loki.default.svc:3100
        jsonData:
          maxLines: 1000

loki:
  loki:
    auth_enabled: false
    commonConfig:
      replication_factor: 1
    storage:
      type: 'filesystem'
  singleBinary:
    replicas: 1