argo-cd:
  dex:
    enabled: false
  applicationSet:
    enabled: false
  notifications:
    enabled: false
  configs:
    cm:
       ui.cssurl: "./css/generated.css"
       exec.enabled: true
       accounts.admin: apiKey, login

  server:
    replicas: 1
    restartPolicy: Never
    extraContainers:
      - name: package
        image: ghcr.io/kndpio/kndp/kndp
        env:
          - name: "PATHS"
            value: "/shared/app/css"
        imagePullPolicy: IfNotPresent
        volumeMounts:
         - name: extensions
           mountPath: /shared/app/css
         - name: extensions
           mountPath: /tmp/extensions
        command: ["/bin/sh", "-c"]
        args: 
          - cp -r /packages/* /tmp/extensions/ && node /tmp/extensions/backend/backend.js
    volumeMounts:
      - name: extensions
        mountPath: /tmp/extensions
      - name: extensions
        mountPath: /shared/app/css
        
    extraArgs:
      - --insecure
      - --rootpath
      - /argo-cd
    ingress:
      enabled: true
      hosts:
        - kndp.local
      paths:
        - /argo-cd
      annotations: 
         kubernetes.io/ingress.class: nginx
 
ingress-nginx:
  controller:
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
    hostPort:
      enabled: true
    terminationGracePeriodSeconds: 0
    service:
      type: NodePort
    watchIngressWithoutClass: true
    nodeSelector:
      ingress-ready: "true"
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Equal"
        effect: "NoSchedule"
    publishService:
      enabled: false
    extraArgs:
      publish-status-address: localhost
      enable-ssl-passthrough: true

vault:
  server:
    enabled: true
    standalone:
      enabled: true
      config: |
        ui = true

        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"

          custom_response_headers {
            "default" = {
              "Content-Security-Policy" = ["frame-ancestors 'self' http://kndp.local/argo-cd"]
            }
          }
        }
        storage "file" {
          path = "/vault/data"
        }

     
    ingress:
      enabled: true
      hosts:
      - host: kndp.local
        paths:
        - /ui
        - /v1
      pathType: ImplementationSpecific
      annotations: 
         kubernetes.io/ingress.class: nginx

backstage-backend:
  initContainers: 
  - name: argocd-cli
    image: quay.io/argoproj/argocd:v2.7.7
    command: ["/bin/sh", "-c", "argocd --core account generate-token --account admin > /tmp/argocd-token"]
    volumeMounts:
      - name: token-volume
        mountPath: /tmp
  - name: kubectl
    image: bitnami/kubectl
    command: ["kubectl", "create", "secret", "generic","argocd-token", "--from-file=/tmp/argocd-token"]
    volumeMounts: 
    - name: token-volume
      mountPath: /tmp
  volumes: 
    - name: token-volume
      emptyDir: {}